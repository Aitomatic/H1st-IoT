#!/usr/bin/env python


import argparse
import os
from ruamel import yaml
import shutil

from arimo.IoT.DataAdmin import Project
from arimo.IoT.DataAdmin._django_root.settings import _CONFIGS_FILE_PATH
from arimo.IoT.DataAdmin.util import _YAML_EXT


parser = argparse.ArgumentParser()

parser.add_argument(
    'project',
    nargs='?',
    default='TEST')

parser.add_argument(
    '--create',
    action='store_true')

args = parser.parse_args()


configs_file_path = \
    os.path.join(
        Project.CONFIG_DIR_PATH,
        args.project + _YAML_EXT)

configs = yaml.safe_load(stream=open(configs_file_path, 'r'))

db_creds = configs['db']
assert db_creds['host'] \
   and db_creds['db_name'] \
   and db_creds['user'] \
   and db_creds['password']

CONFIGS_ORIG_FILE_PATH = _CONFIGS_FILE_PATH + '.orig'

assert not os.path.isfile(CONFIGS_ORIG_FILE_PATH)

shutil.copyfile(
    src=_CONFIGS_FILE_PATH,
    dst=CONFIGS_ORIG_FILE_PATH)

assert os.path.isfile(CONFIGS_ORIG_FILE_PATH)

shutil.copyfile(
    src=configs_file_path,
    dst=_CONFIGS_FILE_PATH)

aws_configs = configs['api']['aws']
assert aws_configs['region'] \
   and aws_configs['vpc'] \
   and aws_configs['subnets']

os.system(
    'eb {} {} --region {}{}'.format(
        'create' if args.create else 'deploy',
        args.project,
        aws_configs['region'],
        ' --vpc.id {0} --vpc.dbsubnets {1} --vpc.ec2subnets {1} --vpc.elbsubnets {1} --vpc.elbpublic --vpc.publicip'
            .format(
                aws_configs['vpc'],
                aws_configs['subnets'])
            if args.create
            else ''))

shutil.copyfile(
    src=CONFIGS_ORIG_FILE_PATH,
    dst=_CONFIGS_FILE_PATH)

os.remove(CONFIGS_ORIG_FILE_PATH)

assert not os.path.isfile(CONFIGS_ORIG_FILE_PATH)
